@page "{id:guid}"
@{
    ViewData["Title"] = "Speaker Güncelle";
}

<h2 class="mb-4 text-center gradient-text">Speaker Güncelle</h2>

<div class="row g-4">
    <div class="col-12 col-lg-7">
        <div class="card-dark">
            <h5 class="mb-3">Genel Bilgiler</h5>
            <form id="editForm" class="text-white">
                <input type="hidden" id="speakerId" value="@RouteData.Values["id"]" />
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Name</label>
                        <input class="form-control" id="name" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Surname</label>
                        <input class="form-control" id="surname" required />
                    </div>
                    <div class="col-12">
                        <label class="form-label">Photo Url</label>
                        <input class="form-control" id="photo" placeholder="https://..." required />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Display Order</label>
                        <input class="form-control" id="order" type="number" value="0" />
                    </div>
                </div>

                <div class="row g-3 mt-2">
                    <div class="col-12 col-md-6">
                        <div class="card-dark">
                            <h6 class="mb-3">Türkçe</h6>
                            <label class="form-label">Title</label>
                            <input class="form-control" id="titleTr" placeholder="Ünvan (TR)" />
                            <label class="form-label mt-2">Description</label>
                            <textarea class="form-control" id="descTr" rows="3" placeholder="Açıklama (TR)"></textarea>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="card-dark">
                            <h6 class="mb-3">English</h6>
                            <label class="form-label">Title</label>
                            <input class="form-control" id="titleEn" placeholder="Title (EN)" />
                            <label class="form-label mt-2">Description</label>
                            <textarea class="form-control" id="descEn" rows="3" placeholder="Description (EN)"></textarea>
                        </div>
                    </div>
                </div>

                <div class="mt-4 d-flex gap-2">
                    <button class="btn btn-gradient" type="submit">Güncelle</button>
                    <a class="btn btn-secondary" asp-page="/Speakers/Index">Vazgeç</a>
                </div>
            </form>
        </div>
    </div>

    <div class="col-12 col-lg-5">
        <div class="card-dark">
            <h5 class="mb-3">Önizleme</h5>
            <img id="preview" class="img-fluid rounded" alt="preview" />
        </div>
    </div>
</div>

@section Scripts {
<script>
const apiBase = window.ETZ_API_BASE || 'http://localhost:5099';
const id = document.getElementById('speakerId').value;
const preview = document.getElementById('preview');

document.getElementById('photo').addEventListener('input', (e) => preview.src = e.target.value);

// basit ön-doldurma: TR dilini çekip alanlara koyma (başlık/desc için kullanıcı düzenler)
// Detay ucu ile doldur (adı, soyadı, foto, order ve TR/EN title/description)
fetch(`${apiBase}/api/speakers/${id}`)
  .then(r => r.json())
  .then(resp => {
    const d = resp?.data || resp; // Response<T> veya direkt DTO olabilir
    if (!d) return;
    document.getElementById('name').value = d.name || '';
    document.getElementById('surname').value = d.surname || '';
    document.getElementById('photo').value = d.speakerPhotoUrl || '';
    preview.src = d.speakerPhotoUrl || '';
    document.getElementById('order').value = d.displayOrder || 0;
    const tr = (d.translations || []).find(x => x.languageCode === 'TR');
    const en = (d.translations || []).find(x => x.languageCode === 'EN');
    if (tr) { document.getElementById('titleTr').value = tr.title || ''; document.getElementById('descTr').value = tr.description || ''; }
    if (en) { document.getElementById('titleEn').value = en.title || ''; document.getElementById('descEn').value = en.description || ''; }
  })
  .catch(()=>{});

const form = document.getElementById('editForm');
form.addEventListener('submit', async (e) => {
  e.preventDefault();
  const payload = {
    name: document.getElementById('name').value.trim(),
    surname: document.getElementById('surname').value.trim(),
    speakerPhotoUrl: document.getElementById('photo').value.trim(),
    displayOrder: Number(document.getElementById('order').value || 0),
    translations: [
      { languageCode: 'TR', title: document.getElementById('titleTr').value.trim(), description: document.getElementById('descTr').value.trim() },
      { languageCode: 'EN', title: document.getElementById('titleEn').value.trim(), description: document.getElementById('descEn').value.trim() }
    ]
  };
  try {
    const res = await fetch(`${apiBase}/api/speakers/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });
    if (!res.ok) throw new Error('HTTP ' + res.status);
    window.location.href = '/Speakers/Index';
  } catch (err) {
    alert('Güncelleme başarısız: ' + err.message);
  }
});
</script>
}
